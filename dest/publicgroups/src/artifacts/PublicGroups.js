/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, loadContractArtifact, NoteSelector, } from '@aztec/aztec.js';
import PublicGroupsContractArtifactJson from '../../target/publicgroups-PublicGroups.json' assert { type: 'json' };
export const PublicGroupsContractArtifact = loadContractArtifact(PublicGroupsContractArtifactJson);
/**
 * Type-safe interface for contract PublicGroups;
 */
export class PublicGroupsContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, PublicGroupsContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, PublicGroupsContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, admin) {
        return new DeployMethod(Fr.ZERO, wallet, PublicGroupsContractArtifact, PublicGroupsContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeysHash(publicKeysHash, wallet, admin) {
        return new DeployMethod(publicKeysHash, wallet, PublicGroupsContractArtifact, PublicGroupsContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeysHash ?? Fr.ZERO, opts.wallet, PublicGroupsContractArtifact, PublicGroupsContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return PublicGroupsContractArtifact;
    }
    static get storage() {
        return {
            admin: {
                slot: new Fr(1n),
            },
            group_members: {
                slot: new Fr(2n),
            },
            group_balances: {
                slot: new Fr(3n),
            }
        };
    }
    static get notes() {
        return {
            AddressNote: {
                id: new NoteSelector(1747431984),
            },
            ValueNote: {
                id: new NoteSelector(1900156023),
            }
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHVibGljR3JvdXBzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHVibGljZ3JvdXBzL3NyYy9hcnRpZmFjdHMvUHVibGljR3JvdXBzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLHNDQUFzQztBQUV0QyxvQkFBb0I7QUFDcEIsT0FBTyxFQUlMLFFBQVEsRUFFUixZQUFZLEVBTVosWUFBWSxFQUtaLEVBQUUsRUFHRixvQkFBb0IsRUFFcEIsWUFBWSxHQUtiLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxnQ0FBZ0MsTUFBTSw2Q0FBNkMsQ0FBQyxTQUFTLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUNuSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxvQkFBb0IsQ0FBQyxnQ0FBd0QsQ0FBQyxDQUFDO0FBSTNIOztHQUVHO0FBQ0gsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFlBQVk7SUFFcEQsWUFDRSxRQUFxQyxFQUNyQyxNQUFjO1FBRWQsS0FBSyxDQUFDLFFBQVEsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBSUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FDcEIsT0FBcUIsRUFDckIsTUFBYztRQUVkLE9BQU8sUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsb0JBQW9CLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBa0MsQ0FBQztJQUN0RyxDQUFDO0lBR0Q7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQWMsRUFBRSxLQUF1QjtRQUMxRCxPQUFPLElBQUksWUFBWSxDQUF1QixFQUFFLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSw0QkFBNEIsRUFBRSxvQkFBb0IsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4SixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsd0JBQXdCLENBQUMsY0FBa0IsRUFBRSxNQUFjLEVBQUUsS0FBdUI7UUFDaEcsT0FBTyxJQUFJLFlBQVksQ0FBdUIsY0FBYyxFQUFFLE1BQU0sRUFBRSw0QkFBNEIsRUFBRSxvQkFBb0IsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUF5RCxFQUN6RCxHQUFHLElBQW9EO1FBRXZELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxjQUFjLElBQUksRUFBRSxDQUFDLElBQUksRUFDOUIsSUFBSSxDQUFDLE1BQU0sRUFDWCw0QkFBNEIsRUFDNUIsb0JBQW9CLENBQUMsRUFBRSxFQUN2QixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDOUIsSUFBSSxDQUFDLE1BQU0sSUFBSSxhQUFhLENBQzdCLENBQUM7SUFDSixDQUFDO0lBSUQ7O09BRUc7SUFDSSxNQUFNLEtBQUssUUFBUTtRQUN4QixPQUFPLDRCQUE0QixDQUFDO0lBQ3RDLENBQUM7SUFHTSxNQUFNLEtBQUssT0FBTztRQUNyQixPQUFPO1lBQ0wsS0FBSyxFQUFFO2dCQUNULElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDTCxhQUFhLEVBQUU7Z0JBQ1QsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNMLGNBQWMsRUFBRTtnQkFDVixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1NBQ3lFLENBQUM7SUFDM0UsQ0FBQztJQUdJLE1BQU0sS0FBSyxLQUFLO1FBQ3JCLE9BQU87WUFDTCxXQUFXLEVBQUU7Z0JBQ1QsRUFBRSxFQUFFLElBQUksWUFBWSxDQUFDLFVBQVUsQ0FBQzthQUNqQztZQUNULFNBQVMsRUFBRTtnQkFDRCxFQUFFLEVBQUUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDO2FBQ2pDO1NBQzBDLENBQUM7SUFDbEQsQ0FBQztDQTZCRiJ9